<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[My Journey With Meteor]]></title>
        <description><![CDATA[My Journey With Meteor]]></description>
        <link>https://thegrid.ai/meteorjs/</link>
        <generator>The Grid</generator>
        <lastBuildDate>Sat, 09 Jan 2016 04:22:19 GMT</lastBuildDate>
        <atom:link href="https://thegrid.ai/meteorjs/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[Host your MeteorJS web app now on Scalingo]]></title>
            <description><![CDATA[<article><h1>Host your MeteorJS web app now on Scalingo</h1><p>Scalingo is a Platform as a Service: just push your MeteorJS code and we'll take care of the rest. When we receive your code, we package it into a Docker container and place it on our cloud, making it instantly available and scalable.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/c1234cac908c2e248951e9a167c825119a41523c.png"></article>]]></description>
            <link>https://scalingo.com/meteorjs-hosting</link>
            <guid isPermaLink="false">75927fb1-6258-434c-a0b6-20ff596d400a</guid>
            <pubDate>Sat, 09 Jan 2016 04:18:24 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Meteor.js vs. the MEAN stack]]></title>
            <description><![CDATA[<article><h1>Meteor.js vs. the MEAN stack</h1><p>I started writing this article as an answer on Quora, seeing how there wasn't really any good comparison between Meteor.js and the MEAN stack ( MongoDB, Express, Angular, N ode.js). First off, I should mention there's no such thing as "the" MEAN stack or framework.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/3527e7fa1cd01fba59ab2d6bf2fe72a44f8c0f18.jpg"></article>]]></description>
            <link>https://wiki.dandascalescu.com/essays/meteor_js_vs_the_mean_stack</link>
            <guid isPermaLink="false">9ab7e52e-be71-4acd-bf91-1e50468c2429</guid>
            <pubDate>Sat, 09 Jan 2016 03:54:18 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Simple Components with Dynamic Templates in Blaze]]></title>
            <description><![CDATA[<article><h1>Simple Components with Dynamic Templates in Blaze</h1><p>In this snippet, we're going to look at a simple pattern for creating reusable components in Blaze. We'll rely on dynamic templates in Blaze, learning how to feed data into our component template from its parent. Join The Meteor Chef on Slack If you get confused or stuck while reading-or just want to talk about Meteor-join us on Slack!</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/27cb09148887ea39a588a3f88fe7d3ecc660e631.png"></article>]]></description>
            <link>https://themeteorchef.com/snippets/simple-components-with-dynamic-templates-in-blaze/</link>
            <guid isPermaLink="false">a64102a5-a37a-4a99-a328-7f39afd67835</guid>
            <pubDate>Sat, 09 Jan 2016 03:33:32 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[The JavaScript App Platform]]></title>
            <description><![CDATA[<article><h1>The JavaScript App Platform</h1><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/e00e4a35a30b587784620c76d8f44a183c8075b2.png"></article>]]></description>
            <link>https://thegrid.ai/meteorjs/the-javascript-app-platform/index.html</link>
            <guid isPermaLink="false">a1a099d6-ebce-43e4-b460-081dccfd04a1</guid>
            <pubDate>Sat, 09 Jan 2016 03:09:35 GMT</pubDate>
        </item>
    </channel>
</rss>